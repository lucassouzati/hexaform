apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment-pedido
spec:
  replicas: {{ .Values.api.pedido.replicas }}
  selector:
    matchLabels:
      app: api-pedido
  template:
    metadata:
      labels:
        app: api-pedido
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      volumes:
        - name: app-volume
          emptyDir: {}
        - name: secret-provider
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "secret-provider"
      containers:
        - name: {{ .Values.api.pedido.name }}
          image: {{ .Values.api.pedido.image }}
          ports:
            - containerPort: 3000
          command: ['/bin/sh', '-c']
          args:
            - './wait-for-it.sh postgres-service:5432 -- ./start.sh'
          env:
          - name: DATABASE_URL
            value: "{{ .Values.database.connectionString }}"
          - name: AWS_ACCESS_KEY_ID
            value: "ASIAZI2LIZ7SOJH2C4PE"
          - name: AWS_SECRET_ACCESS_KEY
            value: "KrnLzRqYxPfhyJ5umebrF9MmXePjhsQ+djheFA3T"
          - name: AWS_DEFAULT_REGION
            value: "us-east-1"
          - name: AWS_ACCOUNT_ID
            value: "{{ .Values.account.id }}"
          - name: AWS_SQS_ENDPOINT
            value: "https://sqs.us-east-1.amazonaws.com"
          - name: AWS_SQS_NOVO_PEDIDO_QUEUE_NAME
            value: "novo_pedido"
          - name: AWS_SQS_PAGAMENTO_PROCESSADO_QUEUE_NAME
            value: "pagamento_processado"
          - name: AWS_SQS_PEDIDO_RECEBIDO_QUEUE_NAME
            value: "pedido_recebido"
          volumeMounts:
            - name: app-volume
              mountPath: /home/node/app/vol
              
      
        
---
apiVersion: v1
kind: Service
metadata:
  name: api-lb-service-pedido
spec:
  type: LoadBalancer
  ports:
    - port: 80
      nodePort: 31000
      targetPort: 3000
  selector:
    app: api-pedido
