apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment-producao
spec:
  replicas: {{ .Values.api.producao.replicas }}
  selector:
    matchLabels:
      app: api-producao
  template:
    metadata:
      labels:
        app: api-producao
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      volumes:
        - name: app-volume
          emptyDir: {}
        # - name: secret-provider
        #   csi:
        #     driver: secrets-store.csi.k8s.io
        #     readOnly: true
        #     volumeAttributes:
        #       secretProviderClass: "secret-provider"
      containers:
        - name: {{ .Values.api.producao.name }}
          image: {{ .Values.api.producao.image }}
          ports:
            - containerPort: 3000
          command: ['/bin/sh', '-c']
          args:
            - './start.sh'
          env:
            - name: AWS_ACCESS_KEY_ID
              value: {{ .Values.account.AWS_ACCESS_KEY_ID }}
            - name: AWS_SECRET_ACCESS_KEY
              value: {{ .Values.account.AWS_SECRET_ACCESS_KEY }} 
            - name: AWS_SESSION_TOKEN
              value: {{ .Values.account.AWS_SESSION_TOKEN }} 
            - name: AWS_DEFAULT_REGION
              value: "us-east-1"
            - name: AWS_ACCOUNT_ID
              value: "{{ .Values.account.id }}"
            - name: AWS_SQS_ENDPOINT
              value: {{ .Values.queue.AWS_SQS_ENDPOINT}}
            - name: AWS_SQS_NOVO_PEDIDO_QUEUE_NAME
              value: "{{ .Values.queue.AWS_SQS_NOVO_PEDIDO_QUEUE_NAME}}"
            - name: AWS_SQS_PAGAMENTO_PROCESSADO_QUEUE_NAME
              value: "{{ .Values.queue.AWS_SQS_PAGAMENTO_PROCESSADO_QUEUE_NAME}}"
            - name: AWS_SQS_PEDIDO_RECEBIDO_QUEUE_NAME
              value: "{{ .Values.queue.AWS_SQS_PEDIDO_RECEBIDO_QUEUE_NAME}}"
            - name: AWS_SQS_PEDIDO_FINALIZADO_QUEUE_NAME
              value: "{{ .Values.queue.AWS_SQS_PEDIDO_FINALIZADO_QUEUE_NAME}}"
            - name: AWS_DYNAMODB_ENDPOINT
              value: {{ .Values.database.db_dynamodb_endpoint_producao }}
          volumeMounts:
            - name: app-volume
              mountPath: /home/node/app/vol
        
---
apiVersion: v1
kind: Service
metadata:
  name: api-lb-service-producao
spec:
  type: LoadBalancer
  ports:
    - port: 80
      nodePort: 32001
      targetPort: 3000
  selector:
    app: api-producao
